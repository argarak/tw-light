# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 2378 2008-03-21 14:28:26Z eht16 $

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = tw-light$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = gdefender.$(OBJEXT) gflmelee.$(OBJEXT) ggob.$(OBJEXT) \
	doxygen.$(OBJEXT) c_input.$(OBJEXT) c_other.$(OBJEXT) \
	c_wussie.$(OBJEXT) twmenuexamples.$(OBJEXT) twgui.$(OBJEXT) \
	twwindow.$(OBJEXT) twhelpers.$(OBJEXT) utils.$(OBJEXT) \
	twbuttontypes.$(OBJEXT) twpopup.$(OBJEXT) twbutton.$(OBJEXT) \
	scp.$(OBJEXT) input.$(OBJEXT) history.$(OBJEXT) \
	sounds.$(OBJEXT) vector2.$(OBJEXT) types.$(OBJEXT) \
	errors.$(OBJEXT) helper.$(OBJEXT) errors_c.$(OBJEXT) \
	pmask.$(OBJEXT) aarot.$(OBJEXT) get_time.$(OBJEXT) \
	base.$(OBJEXT) port_allegro.$(OBJEXT) round.$(OBJEXT) \
	random.$(OBJEXT) aautil.$(OBJEXT) endian.$(OBJEXT) \
	aastr.$(OBJEXT) mtarget.$(OBJEXT) moptions.$(OBJEXT) \
	mshpdata.$(OBJEXT) mcbodies.$(OBJEXT) mshppan.$(OBJEXT) \
	mlog.$(OBJEXT) mnet1.$(OBJEXT) mframe.$(OBJEXT) \
	mship.$(OBJEXT) manim.$(OBJEXT) mfleet.$(OBJEXT) \
	mhelpers.$(OBJEXT) msprite.$(OBJEXT) mgame.$(OBJEXT) \
	mcontrol.$(OBJEXT) mmain.$(OBJEXT) mitems.$(OBJEXT) \
	mshot.$(OBJEXT) mmath.$(OBJEXT) mview.$(OBJEXT) \
	gameconf.$(OBJEXT) gup.$(OBJEXT) shippart.$(OBJEXT) \
	twconfig.$(OBJEXT) orbit.$(OBJEXT) radar.$(OBJEXT) \
	objanim.$(OBJEXT) configrw.$(OBJEXT) nullphas.$(OBJEXT) \
	planet3d.$(OBJEXT) vbodies.$(OBJEXT) vtarget.$(OBJEXT) \
	fontmorph.$(OBJEXT) dialogs.$(OBJEXT) frame.$(OBJEXT) \
	gui.$(OBJEXT)
am_tw_light_OBJECTS = $(am__objects_1)
tw_light_OBJECTS = $(am_tw_light_OBJECTS)
am__DEPENDENCIES_1 =
tw_light_DEPENDENCIES = libraries/libinternal.a ships/libships.a \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(tw_light_SOURCES)
DIST_SOURCES = $(tw_light_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
allegro_CFLAGS = @allegro_CFLAGS@
allegro_LIBS = @allegro_LIBS@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
have_cxx = @have_cxx@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = libraries ships
SRCS = \
games/gdefender.cpp \
games/gflmelee.cpp \
games/gflmelee.h \
games/ggob.cpp \
games/ggob.h \
doxygen.cpp \
ais.h \
input.h \
ais/c_input.cpp \
ais/c_other.cpp \
ais/c_wussie.cpp \
twgui/twmenuexamples.h \
twgui/twmenuexamples.cpp \
twgui/twwindow.h \
twgui/gamebuttonevent.h \
twgui/twbuttontypes.h \
twgui/twbutton.h \
twgui/twhelpers.h \
twgui/twgui.cpp \
twgui/twpopup.h \
twgui/twwindow.cpp \
twgui/twhelpers.cpp \
twgui/twgui.h \
twgui/utils.cpp \
twgui/utils.h \
twgui/twbuttontypes.cpp \
twgui/twpopup.cpp \
twgui/twbutton.cpp \
scp.cpp \
gui.h \
frame.h \
input.cpp  \
util/history.cpp \
util/sounds.cpp \
util/types.h \
util/aastr.h \
util/history.h \
util/vector2.cpp \
util/get_time.h \
util/types.cpp \
util/errors.cpp \
util/sounds.h \
util/vector2.h \
util/helper.c \
util/round.h \
util/helper.h \
util/errors_c.c \
util/pmask.c \
util/errors.h \
util/aarot.c \
util/get_time.c \
util/base.cpp \
util/pmask.h \
util/port.h \
util/port_allegro.c \
util/round.c \
util/random.cpp \
util/aautil.c \
util/endian.h \
util/random.h \
util/base.h \
util/endian.cpp \
util/aastr.c \
util/aautil.h \
melee.h \
id.h \
ship.h \
melee/mframe.h \
melee/mtarget.cpp \
melee/moptions.cpp \
melee/mshpdata.cpp \
melee/mcbodies.cpp \
melee/mship.h \
melee/mshppan.cpp \
melee/mfleet.h \
melee/mitems.h \
melee/mlog.cpp \
melee/manim.h \
melee/mnet1.cpp \
melee/mframe.cpp \
melee/mship.cpp \
melee/moptions.h \
melee/mlog.h \
melee/manim.cpp \
melee/mfleet.cpp \
melee/mshppan.h \
melee/mcbodies.h \
melee/mhelpers.cpp \
melee/msprite.cpp \
melee/mgame.cpp \
melee/mcontrol.cpp \
melee/mnet1.h \
melee/mcontrol.h \
melee/mmain.cpp \
melee/mmain.h \
melee/mitems.cpp \
melee/mview.h \
melee/mshot.cpp \
melee/mgame.h \
melee/mmath.cpp \
melee/mtarget.h \
melee/mview.cpp \
melee/mshot.h \
scp.h \
other/gameconf.cpp \
other/gameconf.h \
other/gup.cpp \
other/gup.h \
other/shippart.cpp \
other/twconfig.cpp \
other/radar.h \
other/twconfig.h \
other/orbit.h \
other/vbodies.h \
other/objanim.h \
other/orbit.cpp \
other/nullphas.h \
other/radar.cpp \
other/objanim.cpp \
other/configrw.cpp \
other/nullphas.cpp \
other/vtarget.h \
other/planet3d.cpp \
other/vbodies.cpp \
other/vtarget.cpp \
other/shippart.h \
other/planet3d.h \
other/fontmorph.cpp \
other/fontmorph.h \
other/configrw.h \
other/dialogs.h \
other/dialogs.cpp \
frame.cpp \
gui.cpp

INCLUDES = -I$(srcdir) $(allegro_CFLAGS)

# build Geany for all other platforms
tw_light_SOURCES = $(SRCS)
tw_light_LDADD = libraries/libinternal.a ships/libships.a $(allegro_LIBS)
AM_CFLAGS = -DTWLIGHT_DATADIR=\""$(datadir)/tw-light"\" \
	-DTWLIGHT_DOCDIR=\""$(docdir)"\" \
	-DTWLIGHT_LIBDIR=\""$(libdir)"\" \
	-DTWLIGHT_LOCALEDIR=\""$(localedir)"\" \
	-DTWLIGHT_PREFIX=\""$(prefix)"\"

AM_CXXFLAGS = $(AM_CFLAGS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tw-light$(EXEEXT): $(tw_light_OBJECTS) $(tw_light_DEPENDENCIES) 
	@rm -f tw-light$(EXEEXT)
	$(CXXLINK) $(tw_light_OBJECTS) $(tw_light_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aarot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aastr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aautil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c_input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c_other.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c_wussie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configrw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dialogs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doxygen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/endian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errors_c.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fontmorph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gameconf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gdefender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gflmelee.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ggob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/helper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/history.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/manim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mcbodies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mcontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mfleet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mframe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mgame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mhelpers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mitems.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mmain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mmath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mnet1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/moptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mship.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mshot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mshpdata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mshppan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/msprite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mtarget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nullphas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objanim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/orbit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/planet3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pmask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/port_allegro.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/round.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shippart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twbuttontypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twgui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twhelpers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twmenuexamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twpopup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vbodies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vtarget.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

helper.o: util/helper.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT helper.o -MD -MP -MF $(DEPDIR)/helper.Tpo -c -o helper.o `test -f 'util/helper.c' || echo '$(srcdir)/'`util/helper.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/helper.Tpo $(DEPDIR)/helper.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/helper.c' object='helper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o helper.o `test -f 'util/helper.c' || echo '$(srcdir)/'`util/helper.c

helper.obj: util/helper.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT helper.obj -MD -MP -MF $(DEPDIR)/helper.Tpo -c -o helper.obj `if test -f 'util/helper.c'; then $(CYGPATH_W) 'util/helper.c'; else $(CYGPATH_W) '$(srcdir)/util/helper.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/helper.Tpo $(DEPDIR)/helper.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/helper.c' object='helper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o helper.obj `if test -f 'util/helper.c'; then $(CYGPATH_W) 'util/helper.c'; else $(CYGPATH_W) '$(srcdir)/util/helper.c'; fi`

errors_c.o: util/errors_c.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT errors_c.o -MD -MP -MF $(DEPDIR)/errors_c.Tpo -c -o errors_c.o `test -f 'util/errors_c.c' || echo '$(srcdir)/'`util/errors_c.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/errors_c.Tpo $(DEPDIR)/errors_c.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/errors_c.c' object='errors_c.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o errors_c.o `test -f 'util/errors_c.c' || echo '$(srcdir)/'`util/errors_c.c

errors_c.obj: util/errors_c.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT errors_c.obj -MD -MP -MF $(DEPDIR)/errors_c.Tpo -c -o errors_c.obj `if test -f 'util/errors_c.c'; then $(CYGPATH_W) 'util/errors_c.c'; else $(CYGPATH_W) '$(srcdir)/util/errors_c.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/errors_c.Tpo $(DEPDIR)/errors_c.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/errors_c.c' object='errors_c.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o errors_c.obj `if test -f 'util/errors_c.c'; then $(CYGPATH_W) 'util/errors_c.c'; else $(CYGPATH_W) '$(srcdir)/util/errors_c.c'; fi`

pmask.o: util/pmask.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pmask.o -MD -MP -MF $(DEPDIR)/pmask.Tpo -c -o pmask.o `test -f 'util/pmask.c' || echo '$(srcdir)/'`util/pmask.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/pmask.Tpo $(DEPDIR)/pmask.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/pmask.c' object='pmask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pmask.o `test -f 'util/pmask.c' || echo '$(srcdir)/'`util/pmask.c

pmask.obj: util/pmask.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pmask.obj -MD -MP -MF $(DEPDIR)/pmask.Tpo -c -o pmask.obj `if test -f 'util/pmask.c'; then $(CYGPATH_W) 'util/pmask.c'; else $(CYGPATH_W) '$(srcdir)/util/pmask.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/pmask.Tpo $(DEPDIR)/pmask.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/pmask.c' object='pmask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pmask.obj `if test -f 'util/pmask.c'; then $(CYGPATH_W) 'util/pmask.c'; else $(CYGPATH_W) '$(srcdir)/util/pmask.c'; fi`

aarot.o: util/aarot.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aarot.o -MD -MP -MF $(DEPDIR)/aarot.Tpo -c -o aarot.o `test -f 'util/aarot.c' || echo '$(srcdir)/'`util/aarot.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aarot.Tpo $(DEPDIR)/aarot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/aarot.c' object='aarot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aarot.o `test -f 'util/aarot.c' || echo '$(srcdir)/'`util/aarot.c

aarot.obj: util/aarot.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aarot.obj -MD -MP -MF $(DEPDIR)/aarot.Tpo -c -o aarot.obj `if test -f 'util/aarot.c'; then $(CYGPATH_W) 'util/aarot.c'; else $(CYGPATH_W) '$(srcdir)/util/aarot.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aarot.Tpo $(DEPDIR)/aarot.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/aarot.c' object='aarot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aarot.obj `if test -f 'util/aarot.c'; then $(CYGPATH_W) 'util/aarot.c'; else $(CYGPATH_W) '$(srcdir)/util/aarot.c'; fi`

get_time.o: util/get_time.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_time.o -MD -MP -MF $(DEPDIR)/get_time.Tpo -c -o get_time.o `test -f 'util/get_time.c' || echo '$(srcdir)/'`util/get_time.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/get_time.Tpo $(DEPDIR)/get_time.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/get_time.c' object='get_time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_time.o `test -f 'util/get_time.c' || echo '$(srcdir)/'`util/get_time.c

get_time.obj: util/get_time.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_time.obj -MD -MP -MF $(DEPDIR)/get_time.Tpo -c -o get_time.obj `if test -f 'util/get_time.c'; then $(CYGPATH_W) 'util/get_time.c'; else $(CYGPATH_W) '$(srcdir)/util/get_time.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/get_time.Tpo $(DEPDIR)/get_time.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/get_time.c' object='get_time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_time.obj `if test -f 'util/get_time.c'; then $(CYGPATH_W) 'util/get_time.c'; else $(CYGPATH_W) '$(srcdir)/util/get_time.c'; fi`

port_allegro.o: util/port_allegro.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT port_allegro.o -MD -MP -MF $(DEPDIR)/port_allegro.Tpo -c -o port_allegro.o `test -f 'util/port_allegro.c' || echo '$(srcdir)/'`util/port_allegro.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/port_allegro.Tpo $(DEPDIR)/port_allegro.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/port_allegro.c' object='port_allegro.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o port_allegro.o `test -f 'util/port_allegro.c' || echo '$(srcdir)/'`util/port_allegro.c

port_allegro.obj: util/port_allegro.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT port_allegro.obj -MD -MP -MF $(DEPDIR)/port_allegro.Tpo -c -o port_allegro.obj `if test -f 'util/port_allegro.c'; then $(CYGPATH_W) 'util/port_allegro.c'; else $(CYGPATH_W) '$(srcdir)/util/port_allegro.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/port_allegro.Tpo $(DEPDIR)/port_allegro.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/port_allegro.c' object='port_allegro.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o port_allegro.obj `if test -f 'util/port_allegro.c'; then $(CYGPATH_W) 'util/port_allegro.c'; else $(CYGPATH_W) '$(srcdir)/util/port_allegro.c'; fi`

round.o: util/round.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT round.o -MD -MP -MF $(DEPDIR)/round.Tpo -c -o round.o `test -f 'util/round.c' || echo '$(srcdir)/'`util/round.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/round.Tpo $(DEPDIR)/round.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/round.c' object='round.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o round.o `test -f 'util/round.c' || echo '$(srcdir)/'`util/round.c

round.obj: util/round.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT round.obj -MD -MP -MF $(DEPDIR)/round.Tpo -c -o round.obj `if test -f 'util/round.c'; then $(CYGPATH_W) 'util/round.c'; else $(CYGPATH_W) '$(srcdir)/util/round.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/round.Tpo $(DEPDIR)/round.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/round.c' object='round.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o round.obj `if test -f 'util/round.c'; then $(CYGPATH_W) 'util/round.c'; else $(CYGPATH_W) '$(srcdir)/util/round.c'; fi`

aautil.o: util/aautil.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aautil.o -MD -MP -MF $(DEPDIR)/aautil.Tpo -c -o aautil.o `test -f 'util/aautil.c' || echo '$(srcdir)/'`util/aautil.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aautil.Tpo $(DEPDIR)/aautil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/aautil.c' object='aautil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aautil.o `test -f 'util/aautil.c' || echo '$(srcdir)/'`util/aautil.c

aautil.obj: util/aautil.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aautil.obj -MD -MP -MF $(DEPDIR)/aautil.Tpo -c -o aautil.obj `if test -f 'util/aautil.c'; then $(CYGPATH_W) 'util/aautil.c'; else $(CYGPATH_W) '$(srcdir)/util/aautil.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aautil.Tpo $(DEPDIR)/aautil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/aautil.c' object='aautil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aautil.obj `if test -f 'util/aautil.c'; then $(CYGPATH_W) 'util/aautil.c'; else $(CYGPATH_W) '$(srcdir)/util/aautil.c'; fi`

aastr.o: util/aastr.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aastr.o -MD -MP -MF $(DEPDIR)/aastr.Tpo -c -o aastr.o `test -f 'util/aastr.c' || echo '$(srcdir)/'`util/aastr.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aastr.Tpo $(DEPDIR)/aastr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/aastr.c' object='aastr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aastr.o `test -f 'util/aastr.c' || echo '$(srcdir)/'`util/aastr.c

aastr.obj: util/aastr.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aastr.obj -MD -MP -MF $(DEPDIR)/aastr.Tpo -c -o aastr.obj `if test -f 'util/aastr.c'; then $(CYGPATH_W) 'util/aastr.c'; else $(CYGPATH_W) '$(srcdir)/util/aastr.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/aastr.Tpo $(DEPDIR)/aastr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='util/aastr.c' object='aastr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aastr.obj `if test -f 'util/aastr.c'; then $(CYGPATH_W) 'util/aastr.c'; else $(CYGPATH_W) '$(srcdir)/util/aastr.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

gdefender.o: games/gdefender.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gdefender.o -MD -MP -MF $(DEPDIR)/gdefender.Tpo -c -o gdefender.o `test -f 'games/gdefender.cpp' || echo '$(srcdir)/'`games/gdefender.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gdefender.Tpo $(DEPDIR)/gdefender.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='games/gdefender.cpp' object='gdefender.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gdefender.o `test -f 'games/gdefender.cpp' || echo '$(srcdir)/'`games/gdefender.cpp

gdefender.obj: games/gdefender.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gdefender.obj -MD -MP -MF $(DEPDIR)/gdefender.Tpo -c -o gdefender.obj `if test -f 'games/gdefender.cpp'; then $(CYGPATH_W) 'games/gdefender.cpp'; else $(CYGPATH_W) '$(srcdir)/games/gdefender.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gdefender.Tpo $(DEPDIR)/gdefender.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='games/gdefender.cpp' object='gdefender.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gdefender.obj `if test -f 'games/gdefender.cpp'; then $(CYGPATH_W) 'games/gdefender.cpp'; else $(CYGPATH_W) '$(srcdir)/games/gdefender.cpp'; fi`

gflmelee.o: games/gflmelee.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gflmelee.o -MD -MP -MF $(DEPDIR)/gflmelee.Tpo -c -o gflmelee.o `test -f 'games/gflmelee.cpp' || echo '$(srcdir)/'`games/gflmelee.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gflmelee.Tpo $(DEPDIR)/gflmelee.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='games/gflmelee.cpp' object='gflmelee.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gflmelee.o `test -f 'games/gflmelee.cpp' || echo '$(srcdir)/'`games/gflmelee.cpp

gflmelee.obj: games/gflmelee.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gflmelee.obj -MD -MP -MF $(DEPDIR)/gflmelee.Tpo -c -o gflmelee.obj `if test -f 'games/gflmelee.cpp'; then $(CYGPATH_W) 'games/gflmelee.cpp'; else $(CYGPATH_W) '$(srcdir)/games/gflmelee.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gflmelee.Tpo $(DEPDIR)/gflmelee.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='games/gflmelee.cpp' object='gflmelee.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gflmelee.obj `if test -f 'games/gflmelee.cpp'; then $(CYGPATH_W) 'games/gflmelee.cpp'; else $(CYGPATH_W) '$(srcdir)/games/gflmelee.cpp'; fi`

ggob.o: games/ggob.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ggob.o -MD -MP -MF $(DEPDIR)/ggob.Tpo -c -o ggob.o `test -f 'games/ggob.cpp' || echo '$(srcdir)/'`games/ggob.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ggob.Tpo $(DEPDIR)/ggob.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='games/ggob.cpp' object='ggob.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ggob.o `test -f 'games/ggob.cpp' || echo '$(srcdir)/'`games/ggob.cpp

ggob.obj: games/ggob.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ggob.obj -MD -MP -MF $(DEPDIR)/ggob.Tpo -c -o ggob.obj `if test -f 'games/ggob.cpp'; then $(CYGPATH_W) 'games/ggob.cpp'; else $(CYGPATH_W) '$(srcdir)/games/ggob.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ggob.Tpo $(DEPDIR)/ggob.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='games/ggob.cpp' object='ggob.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ggob.obj `if test -f 'games/ggob.cpp'; then $(CYGPATH_W) 'games/ggob.cpp'; else $(CYGPATH_W) '$(srcdir)/games/ggob.cpp'; fi`

c_input.o: ais/c_input.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c_input.o -MD -MP -MF $(DEPDIR)/c_input.Tpo -c -o c_input.o `test -f 'ais/c_input.cpp' || echo '$(srcdir)/'`ais/c_input.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/c_input.Tpo $(DEPDIR)/c_input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ais/c_input.cpp' object='c_input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c_input.o `test -f 'ais/c_input.cpp' || echo '$(srcdir)/'`ais/c_input.cpp

c_input.obj: ais/c_input.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c_input.obj -MD -MP -MF $(DEPDIR)/c_input.Tpo -c -o c_input.obj `if test -f 'ais/c_input.cpp'; then $(CYGPATH_W) 'ais/c_input.cpp'; else $(CYGPATH_W) '$(srcdir)/ais/c_input.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/c_input.Tpo $(DEPDIR)/c_input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ais/c_input.cpp' object='c_input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c_input.obj `if test -f 'ais/c_input.cpp'; then $(CYGPATH_W) 'ais/c_input.cpp'; else $(CYGPATH_W) '$(srcdir)/ais/c_input.cpp'; fi`

c_other.o: ais/c_other.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c_other.o -MD -MP -MF $(DEPDIR)/c_other.Tpo -c -o c_other.o `test -f 'ais/c_other.cpp' || echo '$(srcdir)/'`ais/c_other.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/c_other.Tpo $(DEPDIR)/c_other.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ais/c_other.cpp' object='c_other.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c_other.o `test -f 'ais/c_other.cpp' || echo '$(srcdir)/'`ais/c_other.cpp

c_other.obj: ais/c_other.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c_other.obj -MD -MP -MF $(DEPDIR)/c_other.Tpo -c -o c_other.obj `if test -f 'ais/c_other.cpp'; then $(CYGPATH_W) 'ais/c_other.cpp'; else $(CYGPATH_W) '$(srcdir)/ais/c_other.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/c_other.Tpo $(DEPDIR)/c_other.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ais/c_other.cpp' object='c_other.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c_other.obj `if test -f 'ais/c_other.cpp'; then $(CYGPATH_W) 'ais/c_other.cpp'; else $(CYGPATH_W) '$(srcdir)/ais/c_other.cpp'; fi`

c_wussie.o: ais/c_wussie.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c_wussie.o -MD -MP -MF $(DEPDIR)/c_wussie.Tpo -c -o c_wussie.o `test -f 'ais/c_wussie.cpp' || echo '$(srcdir)/'`ais/c_wussie.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/c_wussie.Tpo $(DEPDIR)/c_wussie.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ais/c_wussie.cpp' object='c_wussie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c_wussie.o `test -f 'ais/c_wussie.cpp' || echo '$(srcdir)/'`ais/c_wussie.cpp

c_wussie.obj: ais/c_wussie.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT c_wussie.obj -MD -MP -MF $(DEPDIR)/c_wussie.Tpo -c -o c_wussie.obj `if test -f 'ais/c_wussie.cpp'; then $(CYGPATH_W) 'ais/c_wussie.cpp'; else $(CYGPATH_W) '$(srcdir)/ais/c_wussie.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/c_wussie.Tpo $(DEPDIR)/c_wussie.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ais/c_wussie.cpp' object='c_wussie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o c_wussie.obj `if test -f 'ais/c_wussie.cpp'; then $(CYGPATH_W) 'ais/c_wussie.cpp'; else $(CYGPATH_W) '$(srcdir)/ais/c_wussie.cpp'; fi`

twmenuexamples.o: twgui/twmenuexamples.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twmenuexamples.o -MD -MP -MF $(DEPDIR)/twmenuexamples.Tpo -c -o twmenuexamples.o `test -f 'twgui/twmenuexamples.cpp' || echo '$(srcdir)/'`twgui/twmenuexamples.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twmenuexamples.Tpo $(DEPDIR)/twmenuexamples.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twmenuexamples.cpp' object='twmenuexamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twmenuexamples.o `test -f 'twgui/twmenuexamples.cpp' || echo '$(srcdir)/'`twgui/twmenuexamples.cpp

twmenuexamples.obj: twgui/twmenuexamples.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twmenuexamples.obj -MD -MP -MF $(DEPDIR)/twmenuexamples.Tpo -c -o twmenuexamples.obj `if test -f 'twgui/twmenuexamples.cpp'; then $(CYGPATH_W) 'twgui/twmenuexamples.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twmenuexamples.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twmenuexamples.Tpo $(DEPDIR)/twmenuexamples.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twmenuexamples.cpp' object='twmenuexamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twmenuexamples.obj `if test -f 'twgui/twmenuexamples.cpp'; then $(CYGPATH_W) 'twgui/twmenuexamples.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twmenuexamples.cpp'; fi`

twgui.o: twgui/twgui.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twgui.o -MD -MP -MF $(DEPDIR)/twgui.Tpo -c -o twgui.o `test -f 'twgui/twgui.cpp' || echo '$(srcdir)/'`twgui/twgui.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twgui.Tpo $(DEPDIR)/twgui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twgui.cpp' object='twgui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twgui.o `test -f 'twgui/twgui.cpp' || echo '$(srcdir)/'`twgui/twgui.cpp

twgui.obj: twgui/twgui.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twgui.obj -MD -MP -MF $(DEPDIR)/twgui.Tpo -c -o twgui.obj `if test -f 'twgui/twgui.cpp'; then $(CYGPATH_W) 'twgui/twgui.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twgui.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twgui.Tpo $(DEPDIR)/twgui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twgui.cpp' object='twgui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twgui.obj `if test -f 'twgui/twgui.cpp'; then $(CYGPATH_W) 'twgui/twgui.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twgui.cpp'; fi`

twwindow.o: twgui/twwindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twwindow.o -MD -MP -MF $(DEPDIR)/twwindow.Tpo -c -o twwindow.o `test -f 'twgui/twwindow.cpp' || echo '$(srcdir)/'`twgui/twwindow.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twwindow.Tpo $(DEPDIR)/twwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twwindow.cpp' object='twwindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twwindow.o `test -f 'twgui/twwindow.cpp' || echo '$(srcdir)/'`twgui/twwindow.cpp

twwindow.obj: twgui/twwindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twwindow.obj -MD -MP -MF $(DEPDIR)/twwindow.Tpo -c -o twwindow.obj `if test -f 'twgui/twwindow.cpp'; then $(CYGPATH_W) 'twgui/twwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twwindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twwindow.Tpo $(DEPDIR)/twwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twwindow.cpp' object='twwindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twwindow.obj `if test -f 'twgui/twwindow.cpp'; then $(CYGPATH_W) 'twgui/twwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twwindow.cpp'; fi`

twhelpers.o: twgui/twhelpers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twhelpers.o -MD -MP -MF $(DEPDIR)/twhelpers.Tpo -c -o twhelpers.o `test -f 'twgui/twhelpers.cpp' || echo '$(srcdir)/'`twgui/twhelpers.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twhelpers.Tpo $(DEPDIR)/twhelpers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twhelpers.cpp' object='twhelpers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twhelpers.o `test -f 'twgui/twhelpers.cpp' || echo '$(srcdir)/'`twgui/twhelpers.cpp

twhelpers.obj: twgui/twhelpers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twhelpers.obj -MD -MP -MF $(DEPDIR)/twhelpers.Tpo -c -o twhelpers.obj `if test -f 'twgui/twhelpers.cpp'; then $(CYGPATH_W) 'twgui/twhelpers.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twhelpers.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twhelpers.Tpo $(DEPDIR)/twhelpers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twhelpers.cpp' object='twhelpers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twhelpers.obj `if test -f 'twgui/twhelpers.cpp'; then $(CYGPATH_W) 'twgui/twhelpers.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twhelpers.cpp'; fi`

utils.o: twgui/utils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.o -MD -MP -MF $(DEPDIR)/utils.Tpo -c -o utils.o `test -f 'twgui/utils.cpp' || echo '$(srcdir)/'`twgui/utils.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/utils.Tpo $(DEPDIR)/utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/utils.cpp' object='utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.o `test -f 'twgui/utils.cpp' || echo '$(srcdir)/'`twgui/utils.cpp

utils.obj: twgui/utils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.obj -MD -MP -MF $(DEPDIR)/utils.Tpo -c -o utils.obj `if test -f 'twgui/utils.cpp'; then $(CYGPATH_W) 'twgui/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/utils.Tpo $(DEPDIR)/utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/utils.cpp' object='utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.obj `if test -f 'twgui/utils.cpp'; then $(CYGPATH_W) 'twgui/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/utils.cpp'; fi`

twbuttontypes.o: twgui/twbuttontypes.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twbuttontypes.o -MD -MP -MF $(DEPDIR)/twbuttontypes.Tpo -c -o twbuttontypes.o `test -f 'twgui/twbuttontypes.cpp' || echo '$(srcdir)/'`twgui/twbuttontypes.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twbuttontypes.Tpo $(DEPDIR)/twbuttontypes.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twbuttontypes.cpp' object='twbuttontypes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twbuttontypes.o `test -f 'twgui/twbuttontypes.cpp' || echo '$(srcdir)/'`twgui/twbuttontypes.cpp

twbuttontypes.obj: twgui/twbuttontypes.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twbuttontypes.obj -MD -MP -MF $(DEPDIR)/twbuttontypes.Tpo -c -o twbuttontypes.obj `if test -f 'twgui/twbuttontypes.cpp'; then $(CYGPATH_W) 'twgui/twbuttontypes.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twbuttontypes.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twbuttontypes.Tpo $(DEPDIR)/twbuttontypes.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twbuttontypes.cpp' object='twbuttontypes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twbuttontypes.obj `if test -f 'twgui/twbuttontypes.cpp'; then $(CYGPATH_W) 'twgui/twbuttontypes.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twbuttontypes.cpp'; fi`

twpopup.o: twgui/twpopup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twpopup.o -MD -MP -MF $(DEPDIR)/twpopup.Tpo -c -o twpopup.o `test -f 'twgui/twpopup.cpp' || echo '$(srcdir)/'`twgui/twpopup.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twpopup.Tpo $(DEPDIR)/twpopup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twpopup.cpp' object='twpopup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twpopup.o `test -f 'twgui/twpopup.cpp' || echo '$(srcdir)/'`twgui/twpopup.cpp

twpopup.obj: twgui/twpopup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twpopup.obj -MD -MP -MF $(DEPDIR)/twpopup.Tpo -c -o twpopup.obj `if test -f 'twgui/twpopup.cpp'; then $(CYGPATH_W) 'twgui/twpopup.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twpopup.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twpopup.Tpo $(DEPDIR)/twpopup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twpopup.cpp' object='twpopup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twpopup.obj `if test -f 'twgui/twpopup.cpp'; then $(CYGPATH_W) 'twgui/twpopup.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twpopup.cpp'; fi`

twbutton.o: twgui/twbutton.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twbutton.o -MD -MP -MF $(DEPDIR)/twbutton.Tpo -c -o twbutton.o `test -f 'twgui/twbutton.cpp' || echo '$(srcdir)/'`twgui/twbutton.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twbutton.Tpo $(DEPDIR)/twbutton.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twbutton.cpp' object='twbutton.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twbutton.o `test -f 'twgui/twbutton.cpp' || echo '$(srcdir)/'`twgui/twbutton.cpp

twbutton.obj: twgui/twbutton.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twbutton.obj -MD -MP -MF $(DEPDIR)/twbutton.Tpo -c -o twbutton.obj `if test -f 'twgui/twbutton.cpp'; then $(CYGPATH_W) 'twgui/twbutton.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twbutton.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twbutton.Tpo $(DEPDIR)/twbutton.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='twgui/twbutton.cpp' object='twbutton.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twbutton.obj `if test -f 'twgui/twbutton.cpp'; then $(CYGPATH_W) 'twgui/twbutton.cpp'; else $(CYGPATH_W) '$(srcdir)/twgui/twbutton.cpp'; fi`

history.o: util/history.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT history.o -MD -MP -MF $(DEPDIR)/history.Tpo -c -o history.o `test -f 'util/history.cpp' || echo '$(srcdir)/'`util/history.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/history.Tpo $(DEPDIR)/history.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/history.cpp' object='history.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o history.o `test -f 'util/history.cpp' || echo '$(srcdir)/'`util/history.cpp

history.obj: util/history.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT history.obj -MD -MP -MF $(DEPDIR)/history.Tpo -c -o history.obj `if test -f 'util/history.cpp'; then $(CYGPATH_W) 'util/history.cpp'; else $(CYGPATH_W) '$(srcdir)/util/history.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/history.Tpo $(DEPDIR)/history.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/history.cpp' object='history.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o history.obj `if test -f 'util/history.cpp'; then $(CYGPATH_W) 'util/history.cpp'; else $(CYGPATH_W) '$(srcdir)/util/history.cpp'; fi`

sounds.o: util/sounds.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sounds.o -MD -MP -MF $(DEPDIR)/sounds.Tpo -c -o sounds.o `test -f 'util/sounds.cpp' || echo '$(srcdir)/'`util/sounds.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/sounds.Tpo $(DEPDIR)/sounds.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/sounds.cpp' object='sounds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sounds.o `test -f 'util/sounds.cpp' || echo '$(srcdir)/'`util/sounds.cpp

sounds.obj: util/sounds.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sounds.obj -MD -MP -MF $(DEPDIR)/sounds.Tpo -c -o sounds.obj `if test -f 'util/sounds.cpp'; then $(CYGPATH_W) 'util/sounds.cpp'; else $(CYGPATH_W) '$(srcdir)/util/sounds.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/sounds.Tpo $(DEPDIR)/sounds.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/sounds.cpp' object='sounds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sounds.obj `if test -f 'util/sounds.cpp'; then $(CYGPATH_W) 'util/sounds.cpp'; else $(CYGPATH_W) '$(srcdir)/util/sounds.cpp'; fi`

vector2.o: util/vector2.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector2.o -MD -MP -MF $(DEPDIR)/vector2.Tpo -c -o vector2.o `test -f 'util/vector2.cpp' || echo '$(srcdir)/'`util/vector2.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vector2.Tpo $(DEPDIR)/vector2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/vector2.cpp' object='vector2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector2.o `test -f 'util/vector2.cpp' || echo '$(srcdir)/'`util/vector2.cpp

vector2.obj: util/vector2.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector2.obj -MD -MP -MF $(DEPDIR)/vector2.Tpo -c -o vector2.obj `if test -f 'util/vector2.cpp'; then $(CYGPATH_W) 'util/vector2.cpp'; else $(CYGPATH_W) '$(srcdir)/util/vector2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vector2.Tpo $(DEPDIR)/vector2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/vector2.cpp' object='vector2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector2.obj `if test -f 'util/vector2.cpp'; then $(CYGPATH_W) 'util/vector2.cpp'; else $(CYGPATH_W) '$(srcdir)/util/vector2.cpp'; fi`

types.o: util/types.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT types.o -MD -MP -MF $(DEPDIR)/types.Tpo -c -o types.o `test -f 'util/types.cpp' || echo '$(srcdir)/'`util/types.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/types.Tpo $(DEPDIR)/types.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/types.cpp' object='types.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o types.o `test -f 'util/types.cpp' || echo '$(srcdir)/'`util/types.cpp

types.obj: util/types.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT types.obj -MD -MP -MF $(DEPDIR)/types.Tpo -c -o types.obj `if test -f 'util/types.cpp'; then $(CYGPATH_W) 'util/types.cpp'; else $(CYGPATH_W) '$(srcdir)/util/types.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/types.Tpo $(DEPDIR)/types.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/types.cpp' object='types.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o types.obj `if test -f 'util/types.cpp'; then $(CYGPATH_W) 'util/types.cpp'; else $(CYGPATH_W) '$(srcdir)/util/types.cpp'; fi`

errors.o: util/errors.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT errors.o -MD -MP -MF $(DEPDIR)/errors.Tpo -c -o errors.o `test -f 'util/errors.cpp' || echo '$(srcdir)/'`util/errors.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/errors.Tpo $(DEPDIR)/errors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/errors.cpp' object='errors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o errors.o `test -f 'util/errors.cpp' || echo '$(srcdir)/'`util/errors.cpp

errors.obj: util/errors.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT errors.obj -MD -MP -MF $(DEPDIR)/errors.Tpo -c -o errors.obj `if test -f 'util/errors.cpp'; then $(CYGPATH_W) 'util/errors.cpp'; else $(CYGPATH_W) '$(srcdir)/util/errors.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/errors.Tpo $(DEPDIR)/errors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/errors.cpp' object='errors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o errors.obj `if test -f 'util/errors.cpp'; then $(CYGPATH_W) 'util/errors.cpp'; else $(CYGPATH_W) '$(srcdir)/util/errors.cpp'; fi`

base.o: util/base.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT base.o -MD -MP -MF $(DEPDIR)/base.Tpo -c -o base.o `test -f 'util/base.cpp' || echo '$(srcdir)/'`util/base.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/base.Tpo $(DEPDIR)/base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/base.cpp' object='base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o base.o `test -f 'util/base.cpp' || echo '$(srcdir)/'`util/base.cpp

base.obj: util/base.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT base.obj -MD -MP -MF $(DEPDIR)/base.Tpo -c -o base.obj `if test -f 'util/base.cpp'; then $(CYGPATH_W) 'util/base.cpp'; else $(CYGPATH_W) '$(srcdir)/util/base.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/base.Tpo $(DEPDIR)/base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/base.cpp' object='base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o base.obj `if test -f 'util/base.cpp'; then $(CYGPATH_W) 'util/base.cpp'; else $(CYGPATH_W) '$(srcdir)/util/base.cpp'; fi`

random.o: util/random.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.o -MD -MP -MF $(DEPDIR)/random.Tpo -c -o random.o `test -f 'util/random.cpp' || echo '$(srcdir)/'`util/random.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/random.Tpo $(DEPDIR)/random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/random.cpp' object='random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.o `test -f 'util/random.cpp' || echo '$(srcdir)/'`util/random.cpp

random.obj: util/random.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random.obj -MD -MP -MF $(DEPDIR)/random.Tpo -c -o random.obj `if test -f 'util/random.cpp'; then $(CYGPATH_W) 'util/random.cpp'; else $(CYGPATH_W) '$(srcdir)/util/random.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/random.Tpo $(DEPDIR)/random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/random.cpp' object='random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random.obj `if test -f 'util/random.cpp'; then $(CYGPATH_W) 'util/random.cpp'; else $(CYGPATH_W) '$(srcdir)/util/random.cpp'; fi`

endian.o: util/endian.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT endian.o -MD -MP -MF $(DEPDIR)/endian.Tpo -c -o endian.o `test -f 'util/endian.cpp' || echo '$(srcdir)/'`util/endian.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/endian.Tpo $(DEPDIR)/endian.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/endian.cpp' object='endian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o endian.o `test -f 'util/endian.cpp' || echo '$(srcdir)/'`util/endian.cpp

endian.obj: util/endian.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT endian.obj -MD -MP -MF $(DEPDIR)/endian.Tpo -c -o endian.obj `if test -f 'util/endian.cpp'; then $(CYGPATH_W) 'util/endian.cpp'; else $(CYGPATH_W) '$(srcdir)/util/endian.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/endian.Tpo $(DEPDIR)/endian.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='util/endian.cpp' object='endian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o endian.obj `if test -f 'util/endian.cpp'; then $(CYGPATH_W) 'util/endian.cpp'; else $(CYGPATH_W) '$(srcdir)/util/endian.cpp'; fi`

mtarget.o: melee/mtarget.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mtarget.o -MD -MP -MF $(DEPDIR)/mtarget.Tpo -c -o mtarget.o `test -f 'melee/mtarget.cpp' || echo '$(srcdir)/'`melee/mtarget.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mtarget.Tpo $(DEPDIR)/mtarget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mtarget.cpp' object='mtarget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mtarget.o `test -f 'melee/mtarget.cpp' || echo '$(srcdir)/'`melee/mtarget.cpp

mtarget.obj: melee/mtarget.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mtarget.obj -MD -MP -MF $(DEPDIR)/mtarget.Tpo -c -o mtarget.obj `if test -f 'melee/mtarget.cpp'; then $(CYGPATH_W) 'melee/mtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mtarget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mtarget.Tpo $(DEPDIR)/mtarget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mtarget.cpp' object='mtarget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mtarget.obj `if test -f 'melee/mtarget.cpp'; then $(CYGPATH_W) 'melee/mtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mtarget.cpp'; fi`

moptions.o: melee/moptions.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT moptions.o -MD -MP -MF $(DEPDIR)/moptions.Tpo -c -o moptions.o `test -f 'melee/moptions.cpp' || echo '$(srcdir)/'`melee/moptions.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/moptions.Tpo $(DEPDIR)/moptions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/moptions.cpp' object='moptions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o moptions.o `test -f 'melee/moptions.cpp' || echo '$(srcdir)/'`melee/moptions.cpp

moptions.obj: melee/moptions.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT moptions.obj -MD -MP -MF $(DEPDIR)/moptions.Tpo -c -o moptions.obj `if test -f 'melee/moptions.cpp'; then $(CYGPATH_W) 'melee/moptions.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/moptions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/moptions.Tpo $(DEPDIR)/moptions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/moptions.cpp' object='moptions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o moptions.obj `if test -f 'melee/moptions.cpp'; then $(CYGPATH_W) 'melee/moptions.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/moptions.cpp'; fi`

mshpdata.o: melee/mshpdata.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mshpdata.o -MD -MP -MF $(DEPDIR)/mshpdata.Tpo -c -o mshpdata.o `test -f 'melee/mshpdata.cpp' || echo '$(srcdir)/'`melee/mshpdata.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mshpdata.Tpo $(DEPDIR)/mshpdata.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mshpdata.cpp' object='mshpdata.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mshpdata.o `test -f 'melee/mshpdata.cpp' || echo '$(srcdir)/'`melee/mshpdata.cpp

mshpdata.obj: melee/mshpdata.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mshpdata.obj -MD -MP -MF $(DEPDIR)/mshpdata.Tpo -c -o mshpdata.obj `if test -f 'melee/mshpdata.cpp'; then $(CYGPATH_W) 'melee/mshpdata.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mshpdata.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mshpdata.Tpo $(DEPDIR)/mshpdata.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mshpdata.cpp' object='mshpdata.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mshpdata.obj `if test -f 'melee/mshpdata.cpp'; then $(CYGPATH_W) 'melee/mshpdata.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mshpdata.cpp'; fi`

mcbodies.o: melee/mcbodies.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcbodies.o -MD -MP -MF $(DEPDIR)/mcbodies.Tpo -c -o mcbodies.o `test -f 'melee/mcbodies.cpp' || echo '$(srcdir)/'`melee/mcbodies.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mcbodies.Tpo $(DEPDIR)/mcbodies.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mcbodies.cpp' object='mcbodies.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcbodies.o `test -f 'melee/mcbodies.cpp' || echo '$(srcdir)/'`melee/mcbodies.cpp

mcbodies.obj: melee/mcbodies.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcbodies.obj -MD -MP -MF $(DEPDIR)/mcbodies.Tpo -c -o mcbodies.obj `if test -f 'melee/mcbodies.cpp'; then $(CYGPATH_W) 'melee/mcbodies.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mcbodies.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mcbodies.Tpo $(DEPDIR)/mcbodies.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mcbodies.cpp' object='mcbodies.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcbodies.obj `if test -f 'melee/mcbodies.cpp'; then $(CYGPATH_W) 'melee/mcbodies.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mcbodies.cpp'; fi`

mshppan.o: melee/mshppan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mshppan.o -MD -MP -MF $(DEPDIR)/mshppan.Tpo -c -o mshppan.o `test -f 'melee/mshppan.cpp' || echo '$(srcdir)/'`melee/mshppan.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mshppan.Tpo $(DEPDIR)/mshppan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mshppan.cpp' object='mshppan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mshppan.o `test -f 'melee/mshppan.cpp' || echo '$(srcdir)/'`melee/mshppan.cpp

mshppan.obj: melee/mshppan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mshppan.obj -MD -MP -MF $(DEPDIR)/mshppan.Tpo -c -o mshppan.obj `if test -f 'melee/mshppan.cpp'; then $(CYGPATH_W) 'melee/mshppan.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mshppan.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mshppan.Tpo $(DEPDIR)/mshppan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mshppan.cpp' object='mshppan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mshppan.obj `if test -f 'melee/mshppan.cpp'; then $(CYGPATH_W) 'melee/mshppan.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mshppan.cpp'; fi`

mlog.o: melee/mlog.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mlog.o -MD -MP -MF $(DEPDIR)/mlog.Tpo -c -o mlog.o `test -f 'melee/mlog.cpp' || echo '$(srcdir)/'`melee/mlog.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mlog.Tpo $(DEPDIR)/mlog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mlog.cpp' object='mlog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mlog.o `test -f 'melee/mlog.cpp' || echo '$(srcdir)/'`melee/mlog.cpp

mlog.obj: melee/mlog.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mlog.obj -MD -MP -MF $(DEPDIR)/mlog.Tpo -c -o mlog.obj `if test -f 'melee/mlog.cpp'; then $(CYGPATH_W) 'melee/mlog.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mlog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mlog.Tpo $(DEPDIR)/mlog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mlog.cpp' object='mlog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mlog.obj `if test -f 'melee/mlog.cpp'; then $(CYGPATH_W) 'melee/mlog.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mlog.cpp'; fi`

mnet1.o: melee/mnet1.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mnet1.o -MD -MP -MF $(DEPDIR)/mnet1.Tpo -c -o mnet1.o `test -f 'melee/mnet1.cpp' || echo '$(srcdir)/'`melee/mnet1.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mnet1.Tpo $(DEPDIR)/mnet1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mnet1.cpp' object='mnet1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mnet1.o `test -f 'melee/mnet1.cpp' || echo '$(srcdir)/'`melee/mnet1.cpp

mnet1.obj: melee/mnet1.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mnet1.obj -MD -MP -MF $(DEPDIR)/mnet1.Tpo -c -o mnet1.obj `if test -f 'melee/mnet1.cpp'; then $(CYGPATH_W) 'melee/mnet1.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mnet1.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mnet1.Tpo $(DEPDIR)/mnet1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mnet1.cpp' object='mnet1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mnet1.obj `if test -f 'melee/mnet1.cpp'; then $(CYGPATH_W) 'melee/mnet1.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mnet1.cpp'; fi`

mframe.o: melee/mframe.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mframe.o -MD -MP -MF $(DEPDIR)/mframe.Tpo -c -o mframe.o `test -f 'melee/mframe.cpp' || echo '$(srcdir)/'`melee/mframe.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mframe.Tpo $(DEPDIR)/mframe.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mframe.cpp' object='mframe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mframe.o `test -f 'melee/mframe.cpp' || echo '$(srcdir)/'`melee/mframe.cpp

mframe.obj: melee/mframe.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mframe.obj -MD -MP -MF $(DEPDIR)/mframe.Tpo -c -o mframe.obj `if test -f 'melee/mframe.cpp'; then $(CYGPATH_W) 'melee/mframe.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mframe.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mframe.Tpo $(DEPDIR)/mframe.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mframe.cpp' object='mframe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mframe.obj `if test -f 'melee/mframe.cpp'; then $(CYGPATH_W) 'melee/mframe.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mframe.cpp'; fi`

mship.o: melee/mship.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mship.o -MD -MP -MF $(DEPDIR)/mship.Tpo -c -o mship.o `test -f 'melee/mship.cpp' || echo '$(srcdir)/'`melee/mship.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mship.Tpo $(DEPDIR)/mship.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mship.cpp' object='mship.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mship.o `test -f 'melee/mship.cpp' || echo '$(srcdir)/'`melee/mship.cpp

mship.obj: melee/mship.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mship.obj -MD -MP -MF $(DEPDIR)/mship.Tpo -c -o mship.obj `if test -f 'melee/mship.cpp'; then $(CYGPATH_W) 'melee/mship.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mship.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mship.Tpo $(DEPDIR)/mship.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mship.cpp' object='mship.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mship.obj `if test -f 'melee/mship.cpp'; then $(CYGPATH_W) 'melee/mship.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mship.cpp'; fi`

manim.o: melee/manim.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT manim.o -MD -MP -MF $(DEPDIR)/manim.Tpo -c -o manim.o `test -f 'melee/manim.cpp' || echo '$(srcdir)/'`melee/manim.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/manim.Tpo $(DEPDIR)/manim.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/manim.cpp' object='manim.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o manim.o `test -f 'melee/manim.cpp' || echo '$(srcdir)/'`melee/manim.cpp

manim.obj: melee/manim.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT manim.obj -MD -MP -MF $(DEPDIR)/manim.Tpo -c -o manim.obj `if test -f 'melee/manim.cpp'; then $(CYGPATH_W) 'melee/manim.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/manim.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/manim.Tpo $(DEPDIR)/manim.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/manim.cpp' object='manim.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o manim.obj `if test -f 'melee/manim.cpp'; then $(CYGPATH_W) 'melee/manim.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/manim.cpp'; fi`

mfleet.o: melee/mfleet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mfleet.o -MD -MP -MF $(DEPDIR)/mfleet.Tpo -c -o mfleet.o `test -f 'melee/mfleet.cpp' || echo '$(srcdir)/'`melee/mfleet.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mfleet.Tpo $(DEPDIR)/mfleet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mfleet.cpp' object='mfleet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mfleet.o `test -f 'melee/mfleet.cpp' || echo '$(srcdir)/'`melee/mfleet.cpp

mfleet.obj: melee/mfleet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mfleet.obj -MD -MP -MF $(DEPDIR)/mfleet.Tpo -c -o mfleet.obj `if test -f 'melee/mfleet.cpp'; then $(CYGPATH_W) 'melee/mfleet.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mfleet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mfleet.Tpo $(DEPDIR)/mfleet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mfleet.cpp' object='mfleet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mfleet.obj `if test -f 'melee/mfleet.cpp'; then $(CYGPATH_W) 'melee/mfleet.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mfleet.cpp'; fi`

mhelpers.o: melee/mhelpers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mhelpers.o -MD -MP -MF $(DEPDIR)/mhelpers.Tpo -c -o mhelpers.o `test -f 'melee/mhelpers.cpp' || echo '$(srcdir)/'`melee/mhelpers.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mhelpers.Tpo $(DEPDIR)/mhelpers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mhelpers.cpp' object='mhelpers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mhelpers.o `test -f 'melee/mhelpers.cpp' || echo '$(srcdir)/'`melee/mhelpers.cpp

mhelpers.obj: melee/mhelpers.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mhelpers.obj -MD -MP -MF $(DEPDIR)/mhelpers.Tpo -c -o mhelpers.obj `if test -f 'melee/mhelpers.cpp'; then $(CYGPATH_W) 'melee/mhelpers.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mhelpers.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mhelpers.Tpo $(DEPDIR)/mhelpers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mhelpers.cpp' object='mhelpers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mhelpers.obj `if test -f 'melee/mhelpers.cpp'; then $(CYGPATH_W) 'melee/mhelpers.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mhelpers.cpp'; fi`

msprite.o: melee/msprite.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT msprite.o -MD -MP -MF $(DEPDIR)/msprite.Tpo -c -o msprite.o `test -f 'melee/msprite.cpp' || echo '$(srcdir)/'`melee/msprite.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/msprite.Tpo $(DEPDIR)/msprite.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/msprite.cpp' object='msprite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o msprite.o `test -f 'melee/msprite.cpp' || echo '$(srcdir)/'`melee/msprite.cpp

msprite.obj: melee/msprite.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT msprite.obj -MD -MP -MF $(DEPDIR)/msprite.Tpo -c -o msprite.obj `if test -f 'melee/msprite.cpp'; then $(CYGPATH_W) 'melee/msprite.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/msprite.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/msprite.Tpo $(DEPDIR)/msprite.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/msprite.cpp' object='msprite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o msprite.obj `if test -f 'melee/msprite.cpp'; then $(CYGPATH_W) 'melee/msprite.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/msprite.cpp'; fi`

mgame.o: melee/mgame.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mgame.o -MD -MP -MF $(DEPDIR)/mgame.Tpo -c -o mgame.o `test -f 'melee/mgame.cpp' || echo '$(srcdir)/'`melee/mgame.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mgame.Tpo $(DEPDIR)/mgame.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mgame.cpp' object='mgame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mgame.o `test -f 'melee/mgame.cpp' || echo '$(srcdir)/'`melee/mgame.cpp

mgame.obj: melee/mgame.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mgame.obj -MD -MP -MF $(DEPDIR)/mgame.Tpo -c -o mgame.obj `if test -f 'melee/mgame.cpp'; then $(CYGPATH_W) 'melee/mgame.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mgame.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mgame.Tpo $(DEPDIR)/mgame.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mgame.cpp' object='mgame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mgame.obj `if test -f 'melee/mgame.cpp'; then $(CYGPATH_W) 'melee/mgame.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mgame.cpp'; fi`

mcontrol.o: melee/mcontrol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcontrol.o -MD -MP -MF $(DEPDIR)/mcontrol.Tpo -c -o mcontrol.o `test -f 'melee/mcontrol.cpp' || echo '$(srcdir)/'`melee/mcontrol.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mcontrol.Tpo $(DEPDIR)/mcontrol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mcontrol.cpp' object='mcontrol.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcontrol.o `test -f 'melee/mcontrol.cpp' || echo '$(srcdir)/'`melee/mcontrol.cpp

mcontrol.obj: melee/mcontrol.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcontrol.obj -MD -MP -MF $(DEPDIR)/mcontrol.Tpo -c -o mcontrol.obj `if test -f 'melee/mcontrol.cpp'; then $(CYGPATH_W) 'melee/mcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mcontrol.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mcontrol.Tpo $(DEPDIR)/mcontrol.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mcontrol.cpp' object='mcontrol.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcontrol.obj `if test -f 'melee/mcontrol.cpp'; then $(CYGPATH_W) 'melee/mcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mcontrol.cpp'; fi`

mmain.o: melee/mmain.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmain.o -MD -MP -MF $(DEPDIR)/mmain.Tpo -c -o mmain.o `test -f 'melee/mmain.cpp' || echo '$(srcdir)/'`melee/mmain.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mmain.Tpo $(DEPDIR)/mmain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mmain.cpp' object='mmain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmain.o `test -f 'melee/mmain.cpp' || echo '$(srcdir)/'`melee/mmain.cpp

mmain.obj: melee/mmain.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmain.obj -MD -MP -MF $(DEPDIR)/mmain.Tpo -c -o mmain.obj `if test -f 'melee/mmain.cpp'; then $(CYGPATH_W) 'melee/mmain.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mmain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mmain.Tpo $(DEPDIR)/mmain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mmain.cpp' object='mmain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmain.obj `if test -f 'melee/mmain.cpp'; then $(CYGPATH_W) 'melee/mmain.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mmain.cpp'; fi`

mitems.o: melee/mitems.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mitems.o -MD -MP -MF $(DEPDIR)/mitems.Tpo -c -o mitems.o `test -f 'melee/mitems.cpp' || echo '$(srcdir)/'`melee/mitems.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mitems.Tpo $(DEPDIR)/mitems.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mitems.cpp' object='mitems.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mitems.o `test -f 'melee/mitems.cpp' || echo '$(srcdir)/'`melee/mitems.cpp

mitems.obj: melee/mitems.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mitems.obj -MD -MP -MF $(DEPDIR)/mitems.Tpo -c -o mitems.obj `if test -f 'melee/mitems.cpp'; then $(CYGPATH_W) 'melee/mitems.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mitems.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mitems.Tpo $(DEPDIR)/mitems.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mitems.cpp' object='mitems.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mitems.obj `if test -f 'melee/mitems.cpp'; then $(CYGPATH_W) 'melee/mitems.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mitems.cpp'; fi`

mshot.o: melee/mshot.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mshot.o -MD -MP -MF $(DEPDIR)/mshot.Tpo -c -o mshot.o `test -f 'melee/mshot.cpp' || echo '$(srcdir)/'`melee/mshot.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mshot.Tpo $(DEPDIR)/mshot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mshot.cpp' object='mshot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mshot.o `test -f 'melee/mshot.cpp' || echo '$(srcdir)/'`melee/mshot.cpp

mshot.obj: melee/mshot.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mshot.obj -MD -MP -MF $(DEPDIR)/mshot.Tpo -c -o mshot.obj `if test -f 'melee/mshot.cpp'; then $(CYGPATH_W) 'melee/mshot.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mshot.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mshot.Tpo $(DEPDIR)/mshot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mshot.cpp' object='mshot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mshot.obj `if test -f 'melee/mshot.cpp'; then $(CYGPATH_W) 'melee/mshot.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mshot.cpp'; fi`

mmath.o: melee/mmath.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmath.o -MD -MP -MF $(DEPDIR)/mmath.Tpo -c -o mmath.o `test -f 'melee/mmath.cpp' || echo '$(srcdir)/'`melee/mmath.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mmath.Tpo $(DEPDIR)/mmath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mmath.cpp' object='mmath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmath.o `test -f 'melee/mmath.cpp' || echo '$(srcdir)/'`melee/mmath.cpp

mmath.obj: melee/mmath.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmath.obj -MD -MP -MF $(DEPDIR)/mmath.Tpo -c -o mmath.obj `if test -f 'melee/mmath.cpp'; then $(CYGPATH_W) 'melee/mmath.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mmath.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mmath.Tpo $(DEPDIR)/mmath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mmath.cpp' object='mmath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmath.obj `if test -f 'melee/mmath.cpp'; then $(CYGPATH_W) 'melee/mmath.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mmath.cpp'; fi`

mview.o: melee/mview.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mview.o -MD -MP -MF $(DEPDIR)/mview.Tpo -c -o mview.o `test -f 'melee/mview.cpp' || echo '$(srcdir)/'`melee/mview.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mview.Tpo $(DEPDIR)/mview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mview.cpp' object='mview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mview.o `test -f 'melee/mview.cpp' || echo '$(srcdir)/'`melee/mview.cpp

mview.obj: melee/mview.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mview.obj -MD -MP -MF $(DEPDIR)/mview.Tpo -c -o mview.obj `if test -f 'melee/mview.cpp'; then $(CYGPATH_W) 'melee/mview.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mview.Tpo $(DEPDIR)/mview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='melee/mview.cpp' object='mview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mview.obj `if test -f 'melee/mview.cpp'; then $(CYGPATH_W) 'melee/mview.cpp'; else $(CYGPATH_W) '$(srcdir)/melee/mview.cpp'; fi`

gameconf.o: other/gameconf.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameconf.o -MD -MP -MF $(DEPDIR)/gameconf.Tpo -c -o gameconf.o `test -f 'other/gameconf.cpp' || echo '$(srcdir)/'`other/gameconf.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gameconf.Tpo $(DEPDIR)/gameconf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/gameconf.cpp' object='gameconf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameconf.o `test -f 'other/gameconf.cpp' || echo '$(srcdir)/'`other/gameconf.cpp

gameconf.obj: other/gameconf.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameconf.obj -MD -MP -MF $(DEPDIR)/gameconf.Tpo -c -o gameconf.obj `if test -f 'other/gameconf.cpp'; then $(CYGPATH_W) 'other/gameconf.cpp'; else $(CYGPATH_W) '$(srcdir)/other/gameconf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gameconf.Tpo $(DEPDIR)/gameconf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/gameconf.cpp' object='gameconf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameconf.obj `if test -f 'other/gameconf.cpp'; then $(CYGPATH_W) 'other/gameconf.cpp'; else $(CYGPATH_W) '$(srcdir)/other/gameconf.cpp'; fi`

gup.o: other/gup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gup.o -MD -MP -MF $(DEPDIR)/gup.Tpo -c -o gup.o `test -f 'other/gup.cpp' || echo '$(srcdir)/'`other/gup.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gup.Tpo $(DEPDIR)/gup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/gup.cpp' object='gup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gup.o `test -f 'other/gup.cpp' || echo '$(srcdir)/'`other/gup.cpp

gup.obj: other/gup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gup.obj -MD -MP -MF $(DEPDIR)/gup.Tpo -c -o gup.obj `if test -f 'other/gup.cpp'; then $(CYGPATH_W) 'other/gup.cpp'; else $(CYGPATH_W) '$(srcdir)/other/gup.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/gup.Tpo $(DEPDIR)/gup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/gup.cpp' object='gup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gup.obj `if test -f 'other/gup.cpp'; then $(CYGPATH_W) 'other/gup.cpp'; else $(CYGPATH_W) '$(srcdir)/other/gup.cpp'; fi`

shippart.o: other/shippart.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shippart.o -MD -MP -MF $(DEPDIR)/shippart.Tpo -c -o shippart.o `test -f 'other/shippart.cpp' || echo '$(srcdir)/'`other/shippart.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/shippart.Tpo $(DEPDIR)/shippart.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/shippart.cpp' object='shippart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shippart.o `test -f 'other/shippart.cpp' || echo '$(srcdir)/'`other/shippart.cpp

shippart.obj: other/shippart.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shippart.obj -MD -MP -MF $(DEPDIR)/shippart.Tpo -c -o shippart.obj `if test -f 'other/shippart.cpp'; then $(CYGPATH_W) 'other/shippart.cpp'; else $(CYGPATH_W) '$(srcdir)/other/shippart.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/shippart.Tpo $(DEPDIR)/shippart.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/shippart.cpp' object='shippart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shippart.obj `if test -f 'other/shippart.cpp'; then $(CYGPATH_W) 'other/shippart.cpp'; else $(CYGPATH_W) '$(srcdir)/other/shippart.cpp'; fi`

twconfig.o: other/twconfig.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twconfig.o -MD -MP -MF $(DEPDIR)/twconfig.Tpo -c -o twconfig.o `test -f 'other/twconfig.cpp' || echo '$(srcdir)/'`other/twconfig.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twconfig.Tpo $(DEPDIR)/twconfig.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/twconfig.cpp' object='twconfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twconfig.o `test -f 'other/twconfig.cpp' || echo '$(srcdir)/'`other/twconfig.cpp

twconfig.obj: other/twconfig.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT twconfig.obj -MD -MP -MF $(DEPDIR)/twconfig.Tpo -c -o twconfig.obj `if test -f 'other/twconfig.cpp'; then $(CYGPATH_W) 'other/twconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/other/twconfig.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/twconfig.Tpo $(DEPDIR)/twconfig.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/twconfig.cpp' object='twconfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o twconfig.obj `if test -f 'other/twconfig.cpp'; then $(CYGPATH_W) 'other/twconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/other/twconfig.cpp'; fi`

orbit.o: other/orbit.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT orbit.o -MD -MP -MF $(DEPDIR)/orbit.Tpo -c -o orbit.o `test -f 'other/orbit.cpp' || echo '$(srcdir)/'`other/orbit.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/orbit.Tpo $(DEPDIR)/orbit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/orbit.cpp' object='orbit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o orbit.o `test -f 'other/orbit.cpp' || echo '$(srcdir)/'`other/orbit.cpp

orbit.obj: other/orbit.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT orbit.obj -MD -MP -MF $(DEPDIR)/orbit.Tpo -c -o orbit.obj `if test -f 'other/orbit.cpp'; then $(CYGPATH_W) 'other/orbit.cpp'; else $(CYGPATH_W) '$(srcdir)/other/orbit.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/orbit.Tpo $(DEPDIR)/orbit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/orbit.cpp' object='orbit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o orbit.obj `if test -f 'other/orbit.cpp'; then $(CYGPATH_W) 'other/orbit.cpp'; else $(CYGPATH_W) '$(srcdir)/other/orbit.cpp'; fi`

radar.o: other/radar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT radar.o -MD -MP -MF $(DEPDIR)/radar.Tpo -c -o radar.o `test -f 'other/radar.cpp' || echo '$(srcdir)/'`other/radar.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/radar.Tpo $(DEPDIR)/radar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/radar.cpp' object='radar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radar.o `test -f 'other/radar.cpp' || echo '$(srcdir)/'`other/radar.cpp

radar.obj: other/radar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT radar.obj -MD -MP -MF $(DEPDIR)/radar.Tpo -c -o radar.obj `if test -f 'other/radar.cpp'; then $(CYGPATH_W) 'other/radar.cpp'; else $(CYGPATH_W) '$(srcdir)/other/radar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/radar.Tpo $(DEPDIR)/radar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/radar.cpp' object='radar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radar.obj `if test -f 'other/radar.cpp'; then $(CYGPATH_W) 'other/radar.cpp'; else $(CYGPATH_W) '$(srcdir)/other/radar.cpp'; fi`

objanim.o: other/objanim.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objanim.o -MD -MP -MF $(DEPDIR)/objanim.Tpo -c -o objanim.o `test -f 'other/objanim.cpp' || echo '$(srcdir)/'`other/objanim.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/objanim.Tpo $(DEPDIR)/objanim.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/objanim.cpp' object='objanim.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objanim.o `test -f 'other/objanim.cpp' || echo '$(srcdir)/'`other/objanim.cpp

objanim.obj: other/objanim.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT objanim.obj -MD -MP -MF $(DEPDIR)/objanim.Tpo -c -o objanim.obj `if test -f 'other/objanim.cpp'; then $(CYGPATH_W) 'other/objanim.cpp'; else $(CYGPATH_W) '$(srcdir)/other/objanim.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/objanim.Tpo $(DEPDIR)/objanim.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/objanim.cpp' object='objanim.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o objanim.obj `if test -f 'other/objanim.cpp'; then $(CYGPATH_W) 'other/objanim.cpp'; else $(CYGPATH_W) '$(srcdir)/other/objanim.cpp'; fi`

configrw.o: other/configrw.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT configrw.o -MD -MP -MF $(DEPDIR)/configrw.Tpo -c -o configrw.o `test -f 'other/configrw.cpp' || echo '$(srcdir)/'`other/configrw.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/configrw.Tpo $(DEPDIR)/configrw.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/configrw.cpp' object='configrw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o configrw.o `test -f 'other/configrw.cpp' || echo '$(srcdir)/'`other/configrw.cpp

configrw.obj: other/configrw.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT configrw.obj -MD -MP -MF $(DEPDIR)/configrw.Tpo -c -o configrw.obj `if test -f 'other/configrw.cpp'; then $(CYGPATH_W) 'other/configrw.cpp'; else $(CYGPATH_W) '$(srcdir)/other/configrw.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/configrw.Tpo $(DEPDIR)/configrw.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/configrw.cpp' object='configrw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o configrw.obj `if test -f 'other/configrw.cpp'; then $(CYGPATH_W) 'other/configrw.cpp'; else $(CYGPATH_W) '$(srcdir)/other/configrw.cpp'; fi`

nullphas.o: other/nullphas.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nullphas.o -MD -MP -MF $(DEPDIR)/nullphas.Tpo -c -o nullphas.o `test -f 'other/nullphas.cpp' || echo '$(srcdir)/'`other/nullphas.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/nullphas.Tpo $(DEPDIR)/nullphas.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/nullphas.cpp' object='nullphas.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nullphas.o `test -f 'other/nullphas.cpp' || echo '$(srcdir)/'`other/nullphas.cpp

nullphas.obj: other/nullphas.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nullphas.obj -MD -MP -MF $(DEPDIR)/nullphas.Tpo -c -o nullphas.obj `if test -f 'other/nullphas.cpp'; then $(CYGPATH_W) 'other/nullphas.cpp'; else $(CYGPATH_W) '$(srcdir)/other/nullphas.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/nullphas.Tpo $(DEPDIR)/nullphas.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/nullphas.cpp' object='nullphas.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nullphas.obj `if test -f 'other/nullphas.cpp'; then $(CYGPATH_W) 'other/nullphas.cpp'; else $(CYGPATH_W) '$(srcdir)/other/nullphas.cpp'; fi`

planet3d.o: other/planet3d.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT planet3d.o -MD -MP -MF $(DEPDIR)/planet3d.Tpo -c -o planet3d.o `test -f 'other/planet3d.cpp' || echo '$(srcdir)/'`other/planet3d.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/planet3d.Tpo $(DEPDIR)/planet3d.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/planet3d.cpp' object='planet3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o planet3d.o `test -f 'other/planet3d.cpp' || echo '$(srcdir)/'`other/planet3d.cpp

planet3d.obj: other/planet3d.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT planet3d.obj -MD -MP -MF $(DEPDIR)/planet3d.Tpo -c -o planet3d.obj `if test -f 'other/planet3d.cpp'; then $(CYGPATH_W) 'other/planet3d.cpp'; else $(CYGPATH_W) '$(srcdir)/other/planet3d.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/planet3d.Tpo $(DEPDIR)/planet3d.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/planet3d.cpp' object='planet3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o planet3d.obj `if test -f 'other/planet3d.cpp'; then $(CYGPATH_W) 'other/planet3d.cpp'; else $(CYGPATH_W) '$(srcdir)/other/planet3d.cpp'; fi`

vbodies.o: other/vbodies.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vbodies.o -MD -MP -MF $(DEPDIR)/vbodies.Tpo -c -o vbodies.o `test -f 'other/vbodies.cpp' || echo '$(srcdir)/'`other/vbodies.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vbodies.Tpo $(DEPDIR)/vbodies.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/vbodies.cpp' object='vbodies.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vbodies.o `test -f 'other/vbodies.cpp' || echo '$(srcdir)/'`other/vbodies.cpp

vbodies.obj: other/vbodies.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vbodies.obj -MD -MP -MF $(DEPDIR)/vbodies.Tpo -c -o vbodies.obj `if test -f 'other/vbodies.cpp'; then $(CYGPATH_W) 'other/vbodies.cpp'; else $(CYGPATH_W) '$(srcdir)/other/vbodies.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vbodies.Tpo $(DEPDIR)/vbodies.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/vbodies.cpp' object='vbodies.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vbodies.obj `if test -f 'other/vbodies.cpp'; then $(CYGPATH_W) 'other/vbodies.cpp'; else $(CYGPATH_W) '$(srcdir)/other/vbodies.cpp'; fi`

vtarget.o: other/vtarget.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vtarget.o -MD -MP -MF $(DEPDIR)/vtarget.Tpo -c -o vtarget.o `test -f 'other/vtarget.cpp' || echo '$(srcdir)/'`other/vtarget.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vtarget.Tpo $(DEPDIR)/vtarget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/vtarget.cpp' object='vtarget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vtarget.o `test -f 'other/vtarget.cpp' || echo '$(srcdir)/'`other/vtarget.cpp

vtarget.obj: other/vtarget.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vtarget.obj -MD -MP -MF $(DEPDIR)/vtarget.Tpo -c -o vtarget.obj `if test -f 'other/vtarget.cpp'; then $(CYGPATH_W) 'other/vtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/other/vtarget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vtarget.Tpo $(DEPDIR)/vtarget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/vtarget.cpp' object='vtarget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vtarget.obj `if test -f 'other/vtarget.cpp'; then $(CYGPATH_W) 'other/vtarget.cpp'; else $(CYGPATH_W) '$(srcdir)/other/vtarget.cpp'; fi`

fontmorph.o: other/fontmorph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fontmorph.o -MD -MP -MF $(DEPDIR)/fontmorph.Tpo -c -o fontmorph.o `test -f 'other/fontmorph.cpp' || echo '$(srcdir)/'`other/fontmorph.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fontmorph.Tpo $(DEPDIR)/fontmorph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/fontmorph.cpp' object='fontmorph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fontmorph.o `test -f 'other/fontmorph.cpp' || echo '$(srcdir)/'`other/fontmorph.cpp

fontmorph.obj: other/fontmorph.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fontmorph.obj -MD -MP -MF $(DEPDIR)/fontmorph.Tpo -c -o fontmorph.obj `if test -f 'other/fontmorph.cpp'; then $(CYGPATH_W) 'other/fontmorph.cpp'; else $(CYGPATH_W) '$(srcdir)/other/fontmorph.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fontmorph.Tpo $(DEPDIR)/fontmorph.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/fontmorph.cpp' object='fontmorph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fontmorph.obj `if test -f 'other/fontmorph.cpp'; then $(CYGPATH_W) 'other/fontmorph.cpp'; else $(CYGPATH_W) '$(srcdir)/other/fontmorph.cpp'; fi`

dialogs.o: other/dialogs.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dialogs.o -MD -MP -MF $(DEPDIR)/dialogs.Tpo -c -o dialogs.o `test -f 'other/dialogs.cpp' || echo '$(srcdir)/'`other/dialogs.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/dialogs.Tpo $(DEPDIR)/dialogs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/dialogs.cpp' object='dialogs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dialogs.o `test -f 'other/dialogs.cpp' || echo '$(srcdir)/'`other/dialogs.cpp

dialogs.obj: other/dialogs.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dialogs.obj -MD -MP -MF $(DEPDIR)/dialogs.Tpo -c -o dialogs.obj `if test -f 'other/dialogs.cpp'; then $(CYGPATH_W) 'other/dialogs.cpp'; else $(CYGPATH_W) '$(srcdir)/other/dialogs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/dialogs.Tpo $(DEPDIR)/dialogs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='other/dialogs.cpp' object='dialogs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dialogs.obj `if test -f 'other/dialogs.cpp'; then $(CYGPATH_W) 'other/dialogs.cpp'; else $(CYGPATH_W) '$(srcdir)/other/dialogs.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
